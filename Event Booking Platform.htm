<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Event Booking Platform</title>
    <script src="https://cdn.tailwindcss.com"></script>
</head>
<body class="bg-gray-100 min-h-screen">
    <div class="container mx-auto py-8">
        <h1 class="text-3xl font-bold text-center mb-8">Event Booking Platform</h1>
        <!-- Filter Bar -->
        <div class="flex flex-wrap gap-4 mb-8 justify-center items-center bg-white p-4 rounded shadow">
            <select id="categoryFilter" class="border rounded px-3 py-2">
                <option value="">All Categories</option>
                <option value="Concert">Concert</option>
                <option value="Workshop">Workshop</option>
                <option value="Meetup">Meetup</option>
            </select>
            <input id="dateFilter" type="date" class="border rounded px-3 py-2">
            <input id="locationFilter" type="text" placeholder="Location" class="border rounded px-3 py-2" />
            <button id="clearFilters" class="bg-gray-200 px-4 py-2 rounded hover:bg-gray-300">Clear</button>
        </div>

        <div class="flex flex-col md:flex-row gap-8">
            <!-- Event List -->
            <div class="flex-1">
                <div id="eventsGrid" class="grid grid-cols-1 sm:grid-cols-2 gap-6"></div>
            </div>
            <!-- Calendar View -->
            <div class="w-full md:w-1/3 bg-white rounded shadow p-4 h-fit">
                <h2 class="text-xl font-semibold mb-4">Event Calendar</h2>
                <div id="calendar" class="grid grid-cols-7 gap-1 text-center"></div>
            </div>
        </div>

        <!-- Booking Modal -->
        <div id="bookingModal" class="fixed inset-0 bg-black bg-opacity-40 flex items-center justify-center z-50 hidden">
            <div class="bg-white rounded-lg shadow-lg p-8 w-full max-w-md relative">
                <button id="closeModal" class="absolute top-2 right-2 text-gray-400 hover:text-gray-700">&times;</button>
                <h2 class="text-2xl font-bold mb-4">Book Event</h2>
                <form id="bookingForm" class="space-y-4">
                    <div>
                        <label class="block mb-1 font-medium">Name</label>
                        <input name="name" type="text" required class="w-full border rounded px-3 py-2 focus:ring-2 focus:ring-blue-400">
                        <p class="text-red-500 text-xs mt-1 hidden" id="nameError">Name is required.</p>
                    </div>
                    <div>
                        <label class="block mb-1 font-medium">Email</label>
                        <input name="email" type="email" required class="w-full border rounded px-3 py-2 focus:ring-2 focus:ring-blue-400">
                        <p class="text-red-500 text-xs mt-1 hidden" id="emailError">Valid email is required.</p>
                    </div>
                    <div>
                        <label class="block mb-1 font-medium">Tickets</label>
                        <input name="tickets" type="number" min="1" value="1" required class="w-full border rounded px-3 py-2 focus:ring-2 focus:ring-blue-400">
                        <p class="text-red-500 text-xs mt-1 hidden" id="ticketsError">Enter at least 1 ticket.</p>
                    </div>
                    <button type="submit" class="w-full bg-blue-500 text-white py-2 rounded hover:bg-blue-600 transition">Book Now</button>
                </form>
                <div id="bookingSuccess" class="hidden text-green-600 font-semibold mt-4 text-center">Booking successful!</div>
            </div>
        </div>
    </div>

    <script>
    // Sample event data
    const events = [
        {
            id: 1,
            title: 'Rock Concert',
            image: 'https://images.unsplash.com/photo-1507874457470-272b3c8d8ee2?auto=format&fit=crop&w=400&q=80', // Spintex - city street at night
            date: '2025-08-15',
            location: 'Spintex',
            category: 'Concert',
        },
        {
            id: 2,
            title: 'Photography Workshop',
            image: 'https://images.unsplash.com/photo-1519125323398-675f0ddb6308?auto=format&fit=crop&w=400&q=80', // USA photography workshop
            date: '2025-08-20',
            location: 'Airport Square Building',
            category: 'Workshop',
        },
        {
            id: 3,
            title: 'Tech Meetup',
            image: 'https://images.unsplash.com/photo-1519389950473-47ba0277781c?auto=format&fit=crop&w=400&q=80', // Google Ghana - tech office/meetup
            date: '2025-08-18',
            location: 'Google Ghana',
            category: 'Meetup',
        },
        {
            id: 4,
            title: 'Jazz Night',
            image: 'https://images.unsplash.com/photo-1504674900247-0877df9cc836?auto=format&fit=crop&w=400&q=80', // New jazz club image USA
            date: '2025-08-25',
            location: 'Afrikiko',
            category: 'Concert',
        },
        {
            id: 5,
            title: 'Art Workshop',
            image: 'https://images.unsplash.com/photo-1464983953574-0892a716854b?auto=format&fit=crop&w=400&q=80', // Osu Oxford Street - art/urban
            date: '2025-08-22',
            location: 'Osu Oxford Street',
            category: 'Workshop',
        },
    ];

    let filteredEvents = [...events];
    let selectedEvent = null;

    // Render event cards
    function renderEvents() {
        const grid = document.getElementById('eventsGrid');
        grid.innerHTML = '';
        if (filteredEvents.length === 0) {
            grid.innerHTML = '<div class="col-span-2 text-center text-gray-500">No events found.</div>';
            return;
        }
        filteredEvents.forEach(event => {
            const card = document.createElement('div');
            card.className = 'bg-white rounded-lg shadow p-4 flex flex-col';
            card.innerHTML = `
                <img src="${event.image}" alt="${event.title}" class="rounded mb-3 h-40 w-full object-cover">
                <h3 class="text-lg font-bold mb-1">${event.title}</h3>
                <div class="text-gray-600 text-sm mb-1">${event.date} | ${event.location}</div>
                <div class="text-xs text-blue-500 mb-2">${event.category}</div>
                <button class="mt-auto bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600 transition book-btn" data-id="${event.id}">Book</button>
            `;
            grid.appendChild(card);
        });
        // Add event listeners for book buttons
        document.querySelectorAll('.book-btn').forEach(btn => {
            btn.onclick = function() {
                selectedEvent = events.find(e => e.id == btn.getAttribute('data-id'));
                openBookingModal();
            };
        });
    }

    // Filter logic
    function applyFilters() {
        const category = document.getElementById('categoryFilter').value;
        const date = document.getElementById('dateFilter').value;
        const location = document.getElementById('locationFilter').value.trim().toLowerCase();
        filteredEvents = events.filter(event => {
            return (
                (!category || event.category === category) &&
                (!date || event.date === date) &&
                (!location || event.location.toLowerCase().includes(location))
            );
        });
        renderEvents();
        renderCalendar();
    }

    document.getElementById('categoryFilter').onchange = applyFilters;
    document.getElementById('dateFilter').onchange = applyFilters;
    document.getElementById('locationFilter').oninput = applyFilters;
    document.getElementById('clearFilters').onclick = function() {
        document.getElementById('categoryFilter').value = '';
        document.getElementById('dateFilter').value = '';
        document.getElementById('locationFilter').value = '';
        applyFilters();
    };

    // Booking modal logic
    function openBookingModal() {
        document.getElementById('bookingModal').classList.remove('hidden');
        document.getElementById('bookingSuccess').classList.add('hidden');
        document.getElementById('bookingForm').reset();
        document.getElementById('nameError').classList.add('hidden');
        document.getElementById('emailError').classList.add('hidden');
        document.getElementById('ticketsError').classList.add('hidden');
    }
    document.getElementById('closeModal').onclick = function() {
        document.getElementById('bookingModal').classList.add('hidden');
    };

    // Booking form validation
    document.getElementById('bookingForm').onsubmit = function(e) {
        e.preventDefault();
        let valid = true;
        const name = this.name.value.trim();
        const email = this.email.value.trim();
        const tickets = parseInt(this.tickets.value, 10);
        // Name validation
        if (!name) {
            document.getElementById('nameError').classList.remove('hidden');
            valid = false;
        } else {
            document.getElementById('nameError').classList.add('hidden');
        }
        // Email validation
        if (!email || !/^[^@\s]+@[^@\s]+\.[^@\s]+$/.test(email)) {
            document.getElementById('emailError').classList.remove('hidden');
            valid = false;
        } else {
            document.getElementById('emailError').classList.add('hidden');
        }
        // Tickets validation
        if (!tickets || tickets < 1) {
            document.getElementById('ticketsError').classList.remove('hidden');
            valid = false;
        } else {
            document.getElementById('ticketsError').classList.add('hidden');
        }
        if (valid) {
            document.getElementById('bookingSuccess').classList.remove('hidden');
            setTimeout(() => {
                document.getElementById('bookingModal').classList.add('hidden');
            }, 1500);
        }
    };

    // Calendar view
    function renderCalendar() {
        const calendar = document.getElementById('calendar');
        calendar.innerHTML = '';
        // Get current month and year
        const today = new Date();
        const year = today.getFullYear();
        const month = today.getMonth();
        const firstDay = new Date(year, month, 1);
        const lastDay = new Date(year, month + 1, 0);
        const daysInMonth = lastDay.getDate();
        // Days of week
        const daysOfWeek = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];
        daysOfWeek.forEach(d => {
            const dayCell = document.createElement('div');
            dayCell.textContent = d;
            dayCell.className = 'font-bold text-xs py-1';
            calendar.appendChild(dayCell);
        });
        // Empty cells before first day
        for (let i = 0; i < firstDay.getDay(); i++) {
            const emptyCell = document.createElement('div');
            calendar.appendChild(emptyCell);
        }
        // Fill days
        for (let d = 1; d <= daysInMonth; d++) {
            const dateStr = `${year}-${String(month + 1).padStart(2, '0')}-${String(d).padStart(2, '0')}`;
            const eventOnDay = filteredEvents.find(ev => ev.date === dateStr);
            const dayCell = document.createElement('div');
            dayCell.textContent = d;
            dayCell.className = 'py-1 rounded cursor-pointer';
            if (eventOnDay) {
                dayCell.classList.add('bg-blue-100', 'font-bold', 'text-blue-700');
                dayCell.title = eventOnDay.title;
                dayCell.onclick = function() {
                    document.getElementById('dateFilter').value = dateStr;
                    applyFilters();
                };
            } else {
                dayCell.classList.add('text-gray-500');
            }
            calendar.appendChild(dayCell);
        }
    }

    // Initial render
    renderEvents();
    renderCalendar();
    </script>
</body>
</html>